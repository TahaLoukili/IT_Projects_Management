package Controllers;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import BusinessLayer.ChefManager;
import BusinessLayer.ProjectManagement;
import Models.Chef;
import Models.Methodologie;
import Models.NotifChef;
import Models.Projet;


@WebServlet(name="director" , value="/")

public class DirectorServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	ProjectManagement project_manage = new ProjectManagement();
	ChefManager chefmanager = new ChefManager();
	

    public DirectorServlet() {
        super();

    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String action = request.getServletPath();
		switch(action)
		{
		case "/editProject":
			editProject(request, response);
			break;
		case "/deleteProject":
			deleteProject(request, response);
			break;
		case "/directorAccueil":
			response.sendRedirect("DirectorServlet");
			break;
		case "/ajouterProject":
			List<Chef> chefs = project_manage.getAllChefs();
			request.setAttribute("chefs", chefs);
			request.getRequestDispatcher("/WEB-INF/ajouter-project.jsp").forward(request, response);
			break;
		case "/ajouterChef":
			request.getRequestDispatcher("/WEB-INF/ajouter-chef.jsp").forward(request, response);
			break;
		case "/ajouterMethodologie":
			request.getRequestDispatcher("/WEB-INF/ajouter-meth.jsp").forward(request, response);
			break;
		case "/ajouterTechnologie":
			request.getRequestDispatcher("/WEB-INF/ajouter-tech.jsp").forward(request, response);
			break;
		case "/disconnect":
			HttpSession session = request.getSession();
			session.invalidate();
			response.sendRedirect("login.jsp");
			break;
		}
		
		
		System.out.println("PATH********* "+ action);

		if(action.equals("/DirectorServlet")) {
			listProjects(request, response);
		}
//		
//		if(request.getParameter("deleteProject") != null) {
//			deleteProject(request, response);
//
//		}
//		if(request.getParameter("editProject") != null) {
//			editProject(request, response);
//		}
		
		
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
	}
	
	//Lister les projets
	public void listProjects(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		List<Projet> projects = project_manage.getAllProjects();
		request.setAttribute("projects", projects);
		request.getRequestDispatcher("/WEB-INF/director-space.jsp").forward(request, response);
	}
	
//	Supprimer un projet
	public void deleteProject(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("id"));
		System.out.println("*********"+id);
		project_manage.deleteProjectById(id);
		request.getRequestDispatcher("/WEB-INF/director-space.jsp").forward(request, response);

	}
	
//	Edit project
	public void editProject(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		int id = Integer.parseInt(request.getParameter("id"));
		Projet project = project_manage.selectProjectById(id);
		request.setAttribute("project", project);
		request.setAttribute("methodologies", project_manage.getAllMethodologies());
		request.setAttribute("chefs", project_manage.getAllChefs());
		request.getRequestDispatcher("/WEB-INF/edit-project.jsp").forward(request, response);
	}
	

}
